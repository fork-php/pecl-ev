Problem: move the class code separate files, then simply
========================================================

#include "php_ev_loop.c"
#include "php_ev_watcher.c"
#include "php_ev_io.c"
#include "php_ev_timer.c"
#if EV_PERIODIC_ENABLE
#include "php_ev_periodic.c"
#endif
#if EV_PREPARE_ENABLE
#include "php_ev_scheduler.c"
#endif
#endif
#if EV_SIGNAL_ENABLE
#include "php_ev_signal.c"
#endif
#if EV_CHILD_ENABLE
#include "php_ev_child.c"
#endif
#if EV_STAT_ENABLE
#include "php_ev_stat.c"
#endif
#if EV_IDLE_ENABLE
#include "php_ev_idle.c"
#endif
#if EV_PREPARE_ENABLE
#include "php_ev_prepare.c"
#endif
#if EV_CHECK_ENABLE
#include "php_ev_check.c"
#endif
#if EV_EMBED_ENABLE
#include "php_ev_embed.c"
#endif
#if EV_FORK_ENABLE
#include "php_ev_fork.c"
#endif
#if EV_ASYNC_ENABLE
#include "php_ev_async.c"
#endif

Somewhere in php_ev.c, or php_ev.h

========================================================
C++? 
========================================================

Manipulations with similar watcher types, and the watcher type inheritance
might be done with C++ classes.  To wrap a C++ class is not difficult. To
compile libev with CXX is not a problem either.  But do I really need this?

I'll try to cope with pure C, then try to comlipe with C++.  It is also
possible to compile just some files with CXX, and some with the good old C.
intl extention has a cpp file and the rest are c and h ones, for instance.
